import re
import glob
from bs4 import BeautifulSoup
from config import ROOT_PATH
from constants import SQL_VULNERABILITY_CHECK_TEXT


class CheckVulnerabilityParser:
    def __init__(self, crawled_site):
        self.crawled_site = crawled_site

    def check(self):

        payloads = {}
        for filename in glob.glob('%s/crawler_outputs/%s-*-check-vulnerability.html'
                                  % (ROOT_PATH, self.crawled_site)):
            content = self.get_payload(filename)
            payloads[filename] = content

        vulnerable_pages = []
        for key, value in payloads.items():
            soup = BeautifulSoup(value, 'html.parser')
            if soup.findAll(text=re.compile(SQL_VULNERABILITY_CHECK_TEXT)):
                vulnerable_pages.append(key.strip(ROOT_PATH))

        return vulnerable_pages

    def get_payload(self, file_path):
        with open(file_path, 'r') as file:
            return file.read()
